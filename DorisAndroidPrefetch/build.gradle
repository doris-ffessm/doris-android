plugins {
	id 'java'
}

dependencies {
	// local dependencies
	//implementation fileTree(dir: 'libs', include: '*.jar')

	// maven dependencies
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.2.3'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.2.3'
	implementation 'com.j256.ormlite:ormlite-core:4.47'
	implementation 'com.j256.ormlite:ormlite-jdbc:4.47'
	implementation 'com.google.api-client:google-api-client:1.20.0'
	implementation 'com.google.api-client:google-api-client-java6:1.20.0'
	implementation 'com.google.oauth-client:google-oauth-client-java6:1.20.0'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.20.0'
	implementation 'commons-cli:commons-cli:1.5.0'
	implementation 'commons-io:commons-io:2.4'
	implementation 'commons-logging:commons-logging:1.1.1'
	implementation 'javax.annotation:javax.annotation-api:1.3.1'
	implementation 'log4j:log4j:1.2.17'
	implementation 'net.htmlparser.jericho:jericho-html:3.3'
	implementation 'org.apache.commons:commons-lang3:3.1'
	implementation 'org.apache.httpcomponents:httpclient:4.0.1'
	implementation 'org.xerial:sqlite-jdbc:3.7.2'

	// dependances modules
	implementation project(':DorisAndroidCommon')
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// * WEB_TO_DB : Crée la base à partir du site doris.ffessm.fr
// * par defaut fonctionne en incremental: supprimer le fichier run/database/dorisAndroid.db
// * pour obtenir une base 100% fraiche
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

tasks.register("BuildDorisDBInteractive", JavaExec) {
	dependsOn("classes")
	mainClass = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	if(project.hasProperty('user') ) {
		args '--user', project.property('user'), '--interactive'
	} else {

		// must be set using gradle property such as: ./gradlew buildDorisDBV4 -Puser=foo@gmail.com -Ptoken=THEACCESSTOKEN
		// or by providing these values in a gradle.setting file
		args '--interactive'
	}
}

if (project.hasProperty("args")) {
	ext.cmdargs = project.getProperty("args")
} else {
	ext.cmdargs = ""
}

tasks.register("BuildDorisDB", JavaExec) {
	dependsOn("classes")
	mainClass = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath

	args cmdargs.split()
}

tasks.register("buildDorisDBV4_limited", JavaExec) {
	dependsOn("classes")
	mainClass = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	if(project.hasProperty('user') && project.hasProperty('token')) {
		args '--max', '2000','--user', project.property('user'), '--token', project.property('token')
	} else {

		// must be set using gradle property such as: ./gradlew buildDorisDBV4 -Puser=foo@gmail.com -Ptoken=THEACCESSTOKEN
		// or by providing these values in a gradle.setting file
		args '--max', '2000','--user',  '--token'
	}
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// * récupération du token
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

tasks.register("testConnexion", JavaExec) {
	dependsOn("classes")
	mainClass = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-i', 'TEST_CONNECTION_V4'
}
