apply plugin: 'java'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
	/*sourceCompatibility JavaVersion.VERSION_1_8
	targetCompatibility JavaVersion.VERSION_1_8*/
}

dependencies {
	implementation fileTree(dir: 'libs', include: '*.jar')

	// dependances maven
	implementation 'org.apache.commons:commons-lang3:3.1'
	implementation 'net.htmlparser.jericho:jericho-html:3.3'
	implementation 'com.j256.ormlite:ormlite-core:4.48'
	implementation 'javax.annotation:javax.annotation-api:1.3.1'

	// dependances modules
	implementation project(':DorisAndroidCommon')
}
/*sourceSets {
    main.java.srcDirs = ['src']
    main.resources.srcDirs = ['src']
    test.java.srcDirs = ['tests/java']
    test.resources.srcDirs = ['tests/resources']
}*/

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// * WEB_TO_DB : Crée la base à partir du site doris.ffessm.fr
// * par defaut fonctionne en incremental: supprimer le fichier run/database/dorisAndroid.db
// * pour obtenir une base 100% fraiche
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

task(buildDorisDBV4, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v',  'WEB_TO_DB'
}

task(buildDorisDBV4_limited, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', '--max=2000',  'WEB_TO_DB'
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// * UPDATE : Tout ce qui manque dans html_ref et images_ref est re-téléchargé.
// * Cette génération de la base est suffisante pour un traitement quotidien.
// * Elle permet d'obtenir les fiches nouvelles ou ayant changées de statut,
// * par contre on n'a pas les modifications dans les fiches déjà publiées.
// * Mensuellement on pourrait donc vider les dossiers *_ref
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 

task(updateDorisDB, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', 'UPDATE'
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// * CD : Permet de créer la base et le CD hors ligne du Site.
// * Ce mode utilise html_ref et de images_ref ce qui permet de ne pas tout
// * re-télécharger systématiquement.
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 

task(buildDorisCD, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', 'CDDVD_MED'
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// * DVD : Permet de créer la base et le DVD hors ligne du Site avec toutes
// * les images, c'est à dire les images en la meilleure qualité comprises.
// * Ce mode utilise html_ref et de images_ref ce qui permet de ne pas tout
// * re-télécharger systématiquement.
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 

task(buildDorisDVD, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', 'CDDVD_HI'
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// * Utile quand on veut créer un Base complètement à jour => tout le site sera
// * re-téléchargé ensuite puisque plus de html_ref et de image_ref
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 

task(cleanDoris, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', 'ERASE_ALL'
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// * Permet de supprimer html, image et database, ce qui permet de gagner de la place.
// * S'ils n'étaient pas effacés, ils seraient renommés *_aammjjhhmmss. 
// * html_ref et de image_ref sont conservés ce qui permet de ne pas tout
// * re-télécharger systématiquement. C'est suffisant pour un traitement quotidien.
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 

task(cleanDorisDBKeepRef, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', 'ERASE_BUT_REF'
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// * Déplacement de la Base vers DorisAndroid/assets/
// * Permet que la prochaine génération de l'appli utilise la dernière version de la base 
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

task(copyDorisDBToAndroid, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', 'DB_TO_ANDROID'
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
// * Déplacement des fichiers de html vers html_ref
// * et images vers images_ref
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

task(copyDwnldToRef, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', 'DWNLD_TO_REF'
}


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
// * récupération du token
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

task(testConnexion, dependsOn: 'classes', type: JavaExec) {
	main = 'fr.ffessm.doris.prefetch.PrefetchDorisWebSite'
	classpath = sourceSets.main.runtimeClasspath
	args '-v', 'TEST_CONNECTION_V4'
}
