apply plugin: 'android'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':android-support-v7-appcompat')
    compile project(':GenandroidLib')
	compile project(':DorisAndroidCommon')
}

android {
    compileSdkVersion 17
    buildToolsVersion "19.0.3"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
	
	File signFile = file('/builds/keystore/sign.properties')
	if (signFile.exists()) {
		println 'found sign.properties!'
		Properties p = new Properties()
		p.load(new FileInputStream(signFile))
		signingConfigs {
			releaseConfig {
				storeFile file(p.storeFile)
				storePassword p.storePassword
				keyAlias p.keyAlias
				keyPassword p.keyPassword
			}
		}
		buildTypes.release.signingConfig signingConfigs.releaseConfig
	}
	else{
		println 'sign.properties not found'
	}
	lintOptions {
		// if true, generate an XML report for use by for example Jenkins
        xmlReport true
    }	
}
