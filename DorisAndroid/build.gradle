plugins {
    id 'com.android.application'
}

def acraVersion = '5.12.0'
//def androidSupportVersion = '28.0.0'

dependencies {

    // dependances maven
    implementation 'com.j256.ormlite:ormlite-core:4.47'
    implementation 'com.j256.ormlite:ormlite-android:4.47'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation "ch.acra:acra-mail:$acraVersion"
    implementation "ch.acra:acra-toast:$acraVersion"

    // dependances Android
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.activity:activity:1.10.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.2.1'
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation 'com.google.android.material:material:1.12.0'

    constraints {
        implementation('androidx.core:core:1.9.0') {
            because 'Ensure a recent version of androidx.core for WindowInsetsCompat.Type'
        }
        // If you use Kotlin, you might also need/want core-ktx
        // implementation('androidx.core:core-ktx:1.9.0') {
        //     because 'Ensure a recent version of androidx.core-ktx'
        // }
    }
    // dependances inter-projets
    implementation project(':GenandroidLib')
    implementation project(':DorisAndroidCommon')
}

android {
    // also look into root build.gradle for other applied options
    namespace = 'fr.ffessm.doris.android'
    compileSdkVersion 36
    defaultConfig {
        versionCode 83
        versionName "4.11.1"
    }

    File signFile = file('/builds/keystore/sign.properties') // used by Jenkins
    if (!signFile.exists()) {
        // may be used by developers owning the appropriate keystore
        println 'trying $HOME/.ssh/doris-android_sign.properties'
        signFile = file(System.properties['user.home'] + '/.ssh/doris-android_sign.properties')
        if (signFile.exists()) {
            println 'found doris-android_sign.properties!'
        }
    }
    if (signFile.exists()) {
        println 'found sign.properties! (' + signFile.toPath() +')'
        Properties p = new Properties()
        p.load(new FileInputStream(signFile))
        signingConfigs {
            releaseConfig {
                storeFile file(p.storeFile)
                storePassword p.storePassword
                keyAlias p.keyAlias
                keyPassword p.keyPassword
            }
        }
        buildTypes.release.signingConfig = signingConfigs.releaseConfig
    } else {

        println 'sign.properties not found (neither in /builds/keystore/sign.properties nor in $HOME/.ssh/doris-android_sign.properties)'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    lint {
        abortOnError = false
    }
}
