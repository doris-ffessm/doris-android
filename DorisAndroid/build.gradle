apply plugin: 'com.android.application'

tasks.withType(JavaCompile) {
    /*sourceCompatibility = "1.8"
    targetCompatibility = "1.8"*/
    options.encoding = 'UTF-8'
}

def acraVersion = '5.3.0'
def androidSupportVersion = '26.1.0'

dependencies {
    // a terme on devrait remplacer cela vers des ref dans les repo maven correspondants
    implementation fileTree(dir: 'libs',
            include: '*.jar')
    // dependances maven
    implementation 'com.j256.ormlite:ormlite-core:4.47'
    implementation 'com.j256.ormlite:ormlite-android:4.47'
    implementation 'org.apache.commons:commons-lang3:3.1'
    implementation 'net.htmlparser.jericho:jericho-html:3.3'
    implementation "ch.acra:acra-mail:$acraVersion"
    implementation "ch.acra:acra-toast:$acraVersion"

    // dependances Android
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support:support-v4:$androidSupportVersion"
    implementation "com.squareup.picasso:picasso:2.71828"
    // NOTE la version 21+ ne fonctionne pas bien, Ã  revoir ...
    //compile 'com.android.support:appcompat-v7:21.0.3'
    //compile project(':android-support-v7-appcompat')

    // dependances inter-projets
    implementation project(':GenandroidLib')
    implementation project(':DorisAndroidCommon')
    implementation 'com.android.support:support-v4:26.1.0'
}

repositories {
    /* mavenCentral()
    maven {
        url "https://maven.google.com"
    }*/
    jcenter()
    mavenCentral()
    google()
}

android {
    compileSdkVersion 26
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
    }
/*
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
*/
    File signFile = file('/builds/keystore/sign.properties') // used by Jenkins
    if (!signFile.exists()) {
        // may be used by developers owning the appropriate keystore
        println 'trying $HOME/.ssh/doris-android_sign.properties'
        signFile = file(System.properties['user.home'] + '/.ssh/doris-android_sign.properties')
        if (signFile.exists()) {
            println 'found doris-android_sign.properties!'
        }
    }
    if (signFile.exists()) {
        println 'found sign.properties!'
        Properties p = new Properties()
        p.load(new FileInputStream(signFile))
        signingConfigs {
            releaseConfig {
                storeFile file(p.storeFile)
                storePassword p.storePassword
                keyAlias p.keyAlias
                keyPassword p.keyPassword
            }
        }
        buildTypes.release.signingConfig signingConfigs.releaseConfig
    } else {

        println 'sign.properties not found (neither in /builds/keystore/sign.properties nor in $HOME/.ssh/doris-android_sign.properties)'
    }

    lintOptions {
        // Don't abort if Lint finds an error, otherwise the Jenkins build
        // will be marked as failed, and Jenkins won't analyse the Lint output
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
