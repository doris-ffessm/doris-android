
/*******************************************************************************
 * Copyright (c) 2012 Vojtisek.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Didier Vojtisek - initial API and implementation
 *******************************************************************************/
package fr.ffessm.doris.android.datamodel;

import com.j256.ormlite.dao.ForeignCollection;
import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.field.ForeignCollectionField;
import com.j256.ormlite.table.DatabaseTable;

@DatabaseTable(tableName = "card")
public class Card {

	public static final String XML_CARD = "CARD";
	public static final String XML_ATT_ID = "id";
	public static final String XML_ATT_SCIENTIFICNAME = "scientificName";
	public static final String XML_ATT_IDDORIS = "idDoris";
	public static final String XML_ATT_ISDOWNLOADED = "isDownloaded";
	public static final String XML_ATT_LASTDOWNLOADTIME = "lastDownloadTime";
	public static final String XML_ATT_COMMONNAME = "commonName";
	
	// id is generated by the database and set on the object automagically
	@DatabaseField(generatedId = true)
	protected long _id;
	
	@DatabaseField
	protected java.lang.String scientificName;
	@DatabaseField
	protected int idDoris;
	@DatabaseField
	protected boolean isDownloaded;
	@DatabaseField
	protected java.lang.String lastDownloadTime;
	@DatabaseField
	protected java.lang.String commonName;
	
	@DatabaseField(foreign = true) //, columnName = USER_ID_FIELD_NAME)
	protected Participant writer;
	@DatabaseField(foreign = true) //, columnName = USER_ID_FIELD_NAME)
	protected Participant verifier;
	@ForeignCollectionField(eager = false, foreignFieldName = "ofCard")
	protected ForeignCollection<CardPicture> pictures;
	// TODO many 2 many not supported yet, use simple one to many for the moment, you'll have to maintain the coherence manually for the moment
	@ForeignCollectionField(eager = false, foreignFieldName = "cardsInZone_one")
	protected ForeignCollection<Zone> partOfZones;
	@DatabaseField(foreign = true) 
	protected Zone partOfZones_one;
	@DatabaseField(foreign = true) //, columnName = USER_ID_FIELD_NAME)
	protected GeneralDownloadStatus generalDownloadStatus;
	// Start of user code Card additional properties
	// End of user code
	
	public Card() {}// needed by ormlite
	public Card(java.lang.String scientificName, int idDoris, boolean isDownloaded, java.lang.String lastDownloadTime, java.lang.String commonName) {
		super();
		this.scientificName = scientificName;
		this.idDoris = idDoris;
		this.isDownloaded = isDownloaded;
		this.lastDownloadTime = lastDownloadTime;
		this.commonName = commonName;
	} 

	public long getId() {
		return _id;
	}
	public void setId(long id) {
		this._id = id;
	}

	public java.lang.String getScientificName() {
		return this.scientificName;
	}
	public void setScientificName(java.lang.String scientificName) {
		this.scientificName = scientificName;
	}
	public int getIdDoris() {
		return this.idDoris;
	}
	public void setIdDoris(int idDoris) {
		this.idDoris = idDoris;
	}
	public boolean getIsDownloaded() {
		return this.isDownloaded;
	}
	public void setIsDownloaded(boolean isDownloaded) {
		this.isDownloaded = isDownloaded;
	}
	public java.lang.String getLastDownloadTime() {
		return this.lastDownloadTime;
	}
	public void setLastDownloadTime(java.lang.String lastDownloadTime) {
		this.lastDownloadTime = lastDownloadTime;
	}
	public java.lang.String getCommonName() {
		return this.commonName;
	}
	public void setCommonName(java.lang.String commonName) {
		this.commonName = commonName;
	}

	public String toXML(){
		StringBuilder sb = new StringBuilder();
		sb.append("<");
    	sb.append(XML_CARD);
		sb.append(" ");
    	sb.append(XML_ATT_ID);
    	sb.append("=\"");
		sb.append(this._id);
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_SCIENTIFICNAME);
    	sb.append("=\"");
		sb.append(this.scientificName);
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_IDDORIS);
    	sb.append("=\"");
		sb.append(this.idDoris);
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_ISDOWNLOADED);
    	sb.append("=\"");
		sb.append(this.isDownloaded);
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_LASTDOWNLOADTIME);
    	sb.append("=\"");
		sb.append(this.lastDownloadTime);
    	sb.append("\" ");
		sb.append(" ");
    	sb.append(XML_ATT_COMMONNAME);
    	sb.append("=\"");
		sb.append(this.commonName);
    	sb.append("\" ");
    	sb.append(">");

		// TODO deal with other case

		sb.append("</");
    	sb.append(XML_CARD);
    	sb.append(">");
		return sb.toString();
	}
}
