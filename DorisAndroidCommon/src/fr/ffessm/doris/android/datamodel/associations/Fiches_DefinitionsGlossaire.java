/* *********************************************************************
 * Licence CeCILL-B
 * *********************************************************************
 * Copyright (c) 2012-2013 - FFESSM
 * Auteurs : Guillaume Mo <gmo7942@gmail.com>
 *           Didier Vojtisek <dvojtise@gmail.com>
 * *********************************************************************

Ce logiciel est un programme informatique servant à afficher de manière 
ergonomique sur un terminal Android les fiches du site : doris.ffessm.fr. 

Les images, logos et textes restent la propriété de leurs auteurs, cf. : 
doris.ffessm.fr.

Ce logiciel est régi par la licence CeCILL-B soumise au droit français et
respectant les principes de diffusion des logiciels libres. Vous pouvez
utiliser, modifier et/ou redistribuer ce programme sous les conditions
de la licence CeCILL-B telle que diffusée par le CEA, le CNRS et l'INRIA 
sur le site "http://www.cecill.info".

En contrepartie de l'accessibilité au code source et des droits de copie,
de modification et de redistribution accordés par cette licence, il n'est
offert aux utilisateurs qu'une garantie limitée.  Pour les mêmes raisons,
seule une responsabilité restreinte pèse sur l'auteur du programme,  le
titulaire des droits patrimoniaux et les concédants successifs.

A cet égard  l'attention de l'utilisateur est attirée sur les risques
associés au chargement,  à l'utilisation,  à la modification et/ou au
développement et à la reproduction du logiciel par l'utilisateur étant 
donné sa spécificité de logiciel libre, qui peut le rendre complexe à 
manipuler et qui le réserve donc à des développeurs et des professionnels
avertis possédant  des  connaissances  informatiques approfondies.  Les
utilisateurs sont donc invités à charger  et  tester  l'adéquation  du
logiciel à leurs besoins dans des conditions permettant d'assurer la
sécurité de leurs systèmes et ou de leurs données et, plus généralement, 
à l'utiliser et l'exploiter dans les mêmes conditions de sécurité. 

Le fait que vous puissiez accéder à cet en-tête signifie que vous avez 
pris connaissance de la licence CeCILL-B, et que vous en avez accepté les
termes.
* ********************************************************************* */
package fr.ffessm.doris.android.datamodel.associations;

import com.j256.ormlite.field.DatabaseField;
import com.j256.ormlite.table.DatabaseTable;

import java.sql.SQLException;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import fr.ffessm.doris.android.datamodel.*;

/** 
  * table permettant de retrouver plus vite les fiches concernées par une définition et vice versa. 
  */ 
@DatabaseTable(tableName = "fiches_DefinitionsGlossaire")
public class Fiches_DefinitionsGlossaire {
 
	public static Log log = LogFactory.getLog(Fiches_DefinitionsGlossaire.class);

	
	public final static String FICHE_ID_FIELD_NAME = "Fiche_id";
	public final static String DEFINITIONGLOSSAIRE_ID_FIELD_NAME = "DefinitionGlossaire_id";

	// id is generated by the database and set on the object automagically
	@DatabaseField(generatedId = true)
	protected int _id;
	
	// This is a foreign object which just stores the id from the User object in this table.
	@DatabaseField(foreign = true, columnName = FICHE_ID_FIELD_NAME)
	Fiche fiche;

	// This is a foreign object which just stores the id from the Post object in this table.
	@DatabaseField(foreign = true, columnName = DEFINITIONGLOSSAIRE_ID_FIELD_NAME)
	DefinitionGlossaire definitionGlossaire;

	/**
     * dbHelper used to autorefresh values and doing queries
     * must be set other wise most getter will return proxy that will need to be refreshed
	 */
	protected DorisDBHelper _contextDB = null;

	/**
	 * object created from DB may need to be updated from the DB for being fully navigable
	 */
	public boolean _fiche_mayNeedDBRefresh = true;
	public boolean _definitionGlossaire_mayNeedDBRefresh = true;

	Fiches_DefinitionsGlossaire() {
		// for ormlite
	}

	public Fiches_DefinitionsGlossaire(Fiche fiche, DefinitionGlossaire definitionGlossaire) {
		this.fiche = fiche;
		this.definitionGlossaire = definitionGlossaire;
	}

	/** accessors for Left part */  
	public Fiche getFiche() {
		try {
			if(_fiche_mayNeedDBRefresh && _contextDB != null){
				_contextDB.ficheDao.refresh(this.fiche);
				this.fiche.setContextDB(_contextDB);
				_fiche_mayNeedDBRefresh = false;
			}
		} catch (SQLException e) {
			log.error(e.getMessage(),e);
		}
		if(_contextDB==null && this.fiche == null){
			log.warn("Fiches_DefinitionsGlossaire may not be properly refreshed from DB (_id="+_id+")");
		}
		return this.fiche;
	}
	public void setFiche(Fiche fiche) {
		this.fiche = fiche;
	}

	/** accessors for Right part */ 
	public DefinitionGlossaire getDefinitionGlossaire() {
		try {
			if(_definitionGlossaire_mayNeedDBRefresh && _contextDB != null){
				_contextDB.definitionGlossaireDao.refresh(this.definitionGlossaire);
				this.definitionGlossaire.setContextDB(_contextDB);
				_definitionGlossaire_mayNeedDBRefresh = false;
			}
		} catch (SQLException e) {
			log.error(e.getMessage(),e);
		}
		if(_contextDB==null && this.definitionGlossaire == null){
			log.warn("Fiches_DefinitionsGlossaire may not be properly refreshed from DB (_id="+_id+")");
		}
		return this.definitionGlossaire;
	}
	public void setDefinitionGlossaire(DefinitionGlossaire definitionGlossaire) {
		this.definitionGlossaire = definitionGlossaire;
	}


	public DorisDBHelper getContextDB(){
		return _contextDB;
	}
	public void setContextDB(DorisDBHelper contextDB){
		this._contextDB = contextDB;
	}
}
